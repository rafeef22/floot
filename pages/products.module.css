.container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-8);
}

.searchSection {
  padding: var(--spacing-8) 0 var(--spacing-6);
  display: flex;
  justify-content: center;
}

.searchInputWrapper {
  position: relative;
  width: 100%;
  max-width: 600px;
}

.searchIcon {
  position: absolute;
  left: var(--spacing-3);
  top: 50%;
  transform: translateY(-50%);
  color: var(--muted-foreground);
  pointer-events: none;
  z-index: 1;
}

.searchInput {
  padding-left: calc(var(--spacing-3) * 2 + 20px);
  font-size: 1.125rem;
  height: 3rem;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  border: 2px solid var(--border);
  transition: all var(--animation-duration-normal) ease;
}

.searchInput:focus {
  border-color: var(--primary);
  box-shadow: var(--shadow-focus);
}

.filterSection {
  background-color: var(--surface);
  border-radius: var(--radius-lg);
  padding: var(--spacing-6);
  margin-bottom: var(--spacing-8);
  box-shadow: var(--shadow);
}

.mobileFilterButton {
  display: block;
  margin-bottom: var(--spacing-4);
}

.filterTriggerButton {
  width: 100%;
  position: relative;
}

.filterBadge {
  position: absolute;
  top: -4px;
  right: -4px;
  background-color: var(--primary);
  color: var(--primary-foreground);
  font-size: 0.75rem;
  font-weight: 600;
  padding: 2px 6px;
  border-radius: var(--radius-full);
  min-width: 18px;
  height: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.mobileFilterSheet {
  max-height: 85vh;
}

.mobileFilterContent {
  padding: var(--spacing-6);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-6);
  overflow-y: auto;
  flex: 1;
}

.mobileFilterGrid {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-4);
}

.mobileActiveFilters {
  border-top: 1px solid var(--border);
  padding-top: var(--spacing-4);
}

.mobileFilterActions {
  border-top: 1px solid var(--border);
  padding-top: var(--spacing-4);
  margin-top: auto;
}

.closeFilterButton {
  width: 100%;
}

.filterGrid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: var(--spacing-4);
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
}

.filterLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--foreground);
  margin-bottom: var(--spacing-1);
}

.selectTrigger {
  width: 100%;
}

.activeFilters {
  margin-top: var(--spacing-6);
  padding-top: var(--spacing-6);
  border-top: 1px solid var(--border);
}

.activeFiltersHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-3);
}

.activeFiltersTitle {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--foreground);
}

.resetButton {
  color: var(--muted-foreground);
  font-size: 0.875rem;
}

.activeFiltersList {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-2);
}

.activeFilter {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  background-color: var(--primary);
  color: var(--primary-foreground);
  padding: var(--spacing-1) var(--spacing-3);
  border-radius: var(--radius);
  font-size: 0.875rem;
  font-weight: 500;
}

.activeFilterText {
  white-space: nowrap;
}

.removeFilter {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  padding: var(--spacing-1);
  border-radius: var(--radius-sm);
  transition: background-color var(--animation-duration-fast) ease;
}

.removeFilter:hover {
  background-color: color-mix(in srgb, var(--primary-foreground) 20%, transparent);
}

.main {
  min-height: 50vh;
}

.grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--spacing-4);
}

.errorState,
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--spacing-16) var(--spacing-4);
  background-color: var(--surface);
  border-radius: var(--radius-lg);
  min-height: 40vh;
}

.errorState h2,
.emptyState h2 {
  font-family: var(--font-family-heading);
  font-size: 1.75rem;
  margin-bottom: var(--spacing-2);
  color: var(--foreground);
}

.errorState p,
.emptyState p {
  color: var(--muted-foreground);
  max-width: 450px;
  margin-bottom: var(--spacing-4);
}

.resetEmptyButton {
  margin-top: var(--spacing-2);
}

/* Responsive Design */
@media (max-width: 640px) {
  .container {
    padding: var(--spacing-4);
  }
  
  .searchSection {
    padding: var(--spacing-4) 0;
  }
  
  .searchInput {
    font-size: 1rem;
    height: 2.75rem;
  }
  
  .filterSection {
    padding: var(--spacing-4);
    margin-bottom: var(--spacing-6);
  }
  
  /* Hide desktop filter grid on mobile */
  .filterGrid {
    display: none;
  }
  
  .activeFilters {
    display: none;
  }
  
  .grid {
    gap: var(--spacing-4);
  }
}

@media (min-width: 641px) {
  /* Hide mobile filter button on desktop */
  .mobileFilterButton {
    display: none;
  }
  
  .filterGrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-6);
  }
  
  .grid {
    gap: var(--spacing-6);
  }
}

@media (min-width: 768px) {
  .filterGrid {
    grid-template-columns: repeat(3, 1fr);
  }
  
  .grid {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-8);
  }
}

@media (min-width: 1024px) {
  .filterGrid {
    grid-template-columns: repeat(4, 1fr);
  }
  
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (min-width: 641px) and (max-width: 767px) {
  .activeFiltersHeader {
    flex-direction: column;
    gap: var(--spacing-2);
    align-items: flex-start;
  }
}